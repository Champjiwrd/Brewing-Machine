{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\Brewing-Machine---Finite-State\\\\myfuckingwork\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      ip: \"\",\n      ptr: 0\n    };\n    this.handlebox = this.handlebox.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Strbox, {\n      value: this.state.ip,\n      updatebox: this.handlebox,\n      read: this.state.read,\n      next: this.next,\n      prev: this.previous,\n      ptr: this.state.ptr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DFA, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  handlebox(v) {\n    this.setState({\n      ip: v\n    });\n  }\n\n  next() {\n    let r = this.state.ptr + 1;\n    this.setState({\n      ptr: r\n    });\n  }\n\n  previous() {\n    let r = this.state.ptr - 1;\n    this.setState({\n      ptr: r\n    });\n  }\n\n  startread() {\n    let str = this.state.ip; //l e m 1 2 i h\n\n    switch (str[this.state.ptr]) {\n      case 'l':\n        this.l();\n        break;\n\n      case 'e':\n        this.e();\n        break;\n\n      case 'm':\n        this.m();\n        break;\n\n      case '1':\n        this.one();\n        break;\n\n      case '2':\n        this.two();\n        break;\n\n      case 'i':\n        this.i();\n        break;\n\n      case 'h':\n        this.h();\n        break;\n\n      default:\n        this.trap();\n    }\n  }\n\n  trap() {}\n\n  l() {}\n\n  e() {}\n\n  m() {}\n\n  one() {}\n\n  two() {}\n\n  i() {}\n\n  h() {}\n\n}\n\nclass Strbox extends Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      isboxEn: false\n    };\n    this.handleRand = this.handleRand.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"Put string here\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.value,\n      onChange: this.update,\n      disabled: this.state.isboxEn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleRand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Random\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 63\n      }\n    }), \"String\"), ' ', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      variant: \"primary\",\n      onClick: this.handleStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.prev,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.next,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Read Next\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Read All\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, this.props.value), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, this.props.read));\n  }\n\n  update(event) {\n    this.props.updatebox(event.target.value);\n  }\n\n  handleStart(event) {\n    this.setState({\n      isboxEn: true\n    });\n  }\n\n  handleReset(event) {\n    this.setState({\n      isboxEn: false\n    });\n  }\n\n  handleRand(event) {\n    if (!this.state.isboxEn) {\n      var allcha = 'abcde';\n      var len = 8;\n      var result = '';\n\n      for (let i = 0; i < len; i++) {\n        result += allcha.charAt(Math.floor(Math.random() * 100) % 5);\n      }\n\n      this.props.updatebox(result);\n    }\n  }\n\n}\n\nclass DFA extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, \"DFA diagram is supposed to be here\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/GIT/Brewing-Machine---Finite-State/myfuckingwork/src/App.js"],"names":["React","Component","App","constructor","prop","state","ip","ptr","handlebox","bind","render","read","next","previous","v","setState","r","startread","str","l","e","m","one","two","i","h","trap","Strbox","isboxEn","handleRand","handleStart","handleReset","update","props","value","prev","event","updatebox","target","allcha","len","result","charAt","Math","floor","random","DFA"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(prop){\n    super(prop);\n    \n\n    this.state={\n      ip:\"\",\n      ptr:0\n    }\n\n    this.handlebox = this.handlebox.bind(this);\n  }\n  render(){\n      \n    return(\n      <div class=\"col\">\n        <div class=\"row1\">\n          <Strbox value={this.state.ip} \n          updatebox={this.handlebox} \n          read={this.state.read}\n          next={this.next}\n          prev={this.previous}\n          ptr={this.state.ptr}\n          />\n        </div>\n        <div class=\"row2\">\n          <DFA/>\n        </div>\n      </div>\n    );\n  }\n\n  handlebox(v){\n    this.setState({ip:v})    \n  }\n\n  next(){\n    let r = this.state.ptr + 1\n    this.setState({ptr:r})\n  }\n\n  previous(){\n    let r = this.state.ptr - 1\n    this.setState({ptr:r})\n  }\n  \n  startread(){\n    let str = this.state.ip //l e m 1 2 i h\n    switch(str[this.state.ptr]){\n      case 'l': this.l(); break;\n      case 'e': this.e(); break;\n      case 'm': this.m(); break;\n      case '1': this.one(); break;\n      case '2': this.two(); break;\n      case 'i': this.i(); break;\n      case 'h': this.h(); break;\n      default: this.trap()\n    }\n  }\n\n  trap(){\n\n  }\n\n  l(){\n\n  }\n\n  e(){\n\n  }\n\n  m(){\n\n  }\n\n  one(){\n\n  }\n\n  two(){\n\n  }\n\n  i(){\n\n  }\n\n  h(){\n\n  }\n}\n\nclass Strbox extends Component{\n  constructor(prop){\n    super(prop);\n    \n    this.state={\n      isboxEn:false\n    }\n    \n    this.handleRand = this.handleRand.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.update = this.update.bind(this);\n  }\n  \n  render(){\n    return(\n      <div>\n        <h2>Put string here</h2>\n        <input type=\"text\" value ={this.props.value} onChange={this.update} disabled={this.state.isboxEn}>      \n        </input>\n        <button type=\"button\" onClick={this.handleRand}>Random<br></br>String</button>{' '}\n        <br></br>\n        <button variant=\"primary\" onClick={this.handleStart}>Start</button>\n        <button onClick={this.handleReset}>Reset</button>\n        <button onClick={this.props.prev}>Previous</button>\n        <button onClick={this.props.next}>Read Next</button>\n        <button >Read All</button>\n        <br></br>\n        <h1>{this.props.value}</h1>\n        <h1>{this.props.read}</h1>\n      </div>\n    );\n  }\n  update(event){\n    this.props.updatebox(event.target.value);\n  }\n\n  handleStart(event){\n    this.setState({isboxEn:true});\n  }\n\n  handleReset(event){\n    this.setState({isboxEn:false});\n  } \n\n  handleRand(event){    \n    if(!this.state.isboxEn){\n      var allcha = 'abcde';\n      var len = 8;\n      var result = '';\n      for(let i=0;i<len;i++){\n        result += allcha.charAt(Math.floor(Math.random()*100)%5)\n      }\n      this.props.updatebox(result)\n    }\n  }\n}\n\nclass DFA extends Component{\n  render(){\n    return(\n      <div>\n        DFA diagram is supposed to be here\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}